plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'pmd'
	id 'com.github.spotbugs' version '5.0.14'
}

group = 'org.focus'
version = '0.0.1-SNAPSHOT'

java {
}

jacoco {
	toolVersion = "0.8.12"
}

tasks.jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.required = true
		html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test')
	}
	classDirectories.setFrom(fileTree(dir: 'build/classes/java/main', include: '**/org/focus/**'))
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy tasks.jacocoTestReport // 테스트가 완료된 후에 jacocoTestReport 실행
}

tasks.jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.9
			}
		}
	}
}

check.dependsOn(tasks.jacocoTestCoverageVerification)

pmd {
	toolVersion = '7.7.0'
	ruleSets = ['java-basic', 'java-design']
	ignoreFailures = true
}

spotbugs {
	toolVersion = "4.8.6"
	ignoreFailures = true
	effort = "max"
	reportLevel = "high"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.reactivestreams:reactive-streams:1.0.3'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// S3 (Object Storage NCLOUD)
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.261'

	// JAXB (Base64 관련 경고 해결)
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
}
